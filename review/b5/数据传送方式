(1) 无条件传送方式。
(2) 查询传送方式。
(3) 中断传送方式。
(4) 直接存储器存取方式(DMA)。
(5) I/O 处理机传送方式。

第 1 种“无条件传送方式” ,应用此方式的数据源设备一定是随时准备好了数据,CPU 随时取随时拿都没问题,如寄存器、内存就是类似这样的设备,CPU 取数据时不用提前打招呼。



第 2 种“查询传送方式”,也称为程序 I/O、PIO(Programming Input/Output Model),是指传输之前,由程序先去检测设备的状态。数据源设备在一定的条件下才能传送数据,这类设备通常是低速设备,比CPU 慢很多。CPU 需要数据时,先检查该设备的状态,如果状态为“准备好了可以发送”,CPU 再去获取数据。硬盘有 status 寄存器,里面保存了工作状态,所以对硬盘可以用此方式来获取数据。



第 3 种“中断传送方式”，也称为中断驱动 I/O。如果数据源设备将数据准备好后再通知 CPU 来取,这样效率就高了。通知 CPU 可以采用中断的方式,当数据源设备准备好数据后,它通过发中断来通知 CPU 来拿数据,这样避免了 CPU 花在查询上的时间,效率较高。



第 4 种“直接存储器存取方式(DMA)” 。

通过中断方式来通知 CPU,CPU 就要通过压栈来保护现场,还要执行传输指令,最后还要恢复现场。

更爽的是一点都不要浪费 CPU 资源,不让 CPU参与传输,完全由数据源设备和内存直接传输。CPU 直接到内存中拿数据就好了。这就是此方式中“直接”的意思。不过 DMA 是由硬件实现的,不是软件概念,所以需要 DMA 控制器才行。



第 5 种“I/O 处理机传送方式”。

DMA 方式中 CPU 还嫌爽的不够,毕竟数据输入之后或输出之前还是有一部分工作要由 CPU 来完成的,如数据交换、组合、校验等。
如果 DMA 控制器再强大一点,把这些工作帮 CPU 做了就好了。也是哦,既然为了解放 CPU,都已经引用一个硬件(DMA)了,干脆一不做二不休,再引入一个硬件吧。于是,I/O 处理机诞生啦,听名字就知道它专门用于处理 IO,并且它其实是一种处理器,只不过用的是另一套擅长 IO 的指令系统,随时可以处理数据。有了 I/O 处理机的帮忙,CPU 甚至可以不知道有传输这回事,这下 CPU 才真正爽到家啦。同样,这也是需要单独的硬件来支持。