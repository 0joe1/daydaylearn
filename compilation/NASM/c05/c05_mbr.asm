;令es指向文本的显示缓冲区0xb800
mov ax,0xb800
mov es,ax

;在那个位置显示字符串"Label offset"
mov byte [es:0x00],'L'
mov byte [es:0x01],0x07
mov byte [es:0x02],'a'
mov byte [es:0x03],0x07
mov byte [es:0x04],'b'
mov byte [es:0x05],0x07
mov byte [es:0x06],'e'
mov byte [es:0x07],0x07
mov byte [es:0x08],'l'
mov byte [es:0x09],0x07
mov byte [es:0x0a],' '
mov byte [es:0x0b],0x07
mov byte [es:0x0c],'o'
mov byte [es:0x0d],0x07
mov byte [es:0x0e],'f'
mov byte [es:0x0f],0x07
mov byte [es:0x10],'f'
mov byte [es:0x11],0x07
mov byte [es:0x12],'s'
mov byte [es:0x13],0x07
mov byte [es:0x14],'e'
mov byte [es:0x15],0x07
mov byte [es:0x16],'t'
mov byte [es:0x17],0x07
mov byte [es:0x18],':'
mov byte [es:0x19],0x07

;取得 number 的偏移地址
mov ax,number
mov bx,10

;设置数据段基地址
mov dx,cs
mov ds,dx

;求各个数位的数字
;万
xor dx,dx
div bx
mov [0x7c00+number+0x00],dl

;千
xor dx,dx
div bx
mov [0x7c00+number+0x01],dl

;百
xor dx,dx
div bx
mov [0x7c00+number+0x02],dl

;十
xor dx,dx
div bx
mov [0x7c00+number+0x03],dl

;个
xor dx,dx
div bx
mov [0x7c00+number+0x04],dl

;将保存的数字弄到显卡物理地址空间
mov al,[0x7c00+number+0x04]
add al,0x30
mov [es:0x1a],al
mov byte [es:1b],0x07
 
mov al,[0x7c00+number+0x03]
add al,0x30
mov [es:0x1c],al
mov byte [es:1d],0x07


mov al,[0x7c00+number+0x02]
add al,0x30
mov [es:0x1e],al
mov byte [es:0x1f],0x07

mov al,[0x7c00+number+0x01]
add al,0x30
mov [es:0x20],al
mov byte [es:21],0x07

mov al,[0x7c00+number+0x00]
add al,0x30
mov [es:0x22],al
mov byte [es:0x23],0x07

mov byte [es:0x24],'D'
mov byte [es:0x25],0x02

;无限循环
l: jmp near l

;声明那5个数字
number db 0,0,0,0,0

;声明末尾标志
times 510-($-$$) db 0 ;用0填充本扇区除了最后两个魔数的剩余空间
db 0x55,0xaa
